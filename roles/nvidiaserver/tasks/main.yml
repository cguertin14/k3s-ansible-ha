#
# Graphics-related packages
#
- name: Install Intel graphics packages
  become: true
  apt:
    autoremove: yes
    pkg:
    - intel-opencl-icd
    - intel-media-va-driver-non-free
    - intel-gpu-tools
    - libdrm-intel1
    # not intel-related, but frick it, necessary for next step
    - alsa-utils

# Hardcoded nvidia 570 driver
- name: Install Nvidia driver with ubuntu-drivers
  become: true
  ansible.builtin.command: ubuntu-drivers install nvidia:570

# NVIDIA Container Toolkit prerequisites
- name: Download the NVIDIA repository GPG key if it does not exist
  shell: |
    if [ ! -f /usr/share/keyrings/nvidia-container-toolkit-keyring.gpg ]; then
      curl -fsSL https://nvidia.github.io/libnvidia-container/gpgkey | gpg --dearmor -o /usr/share/keyrings/nvidia-container-toolkit-keyring.gpg
    fi
  args:
    creates: /usr/share/keyrings/nvidia-container-toolkit-keyring.gpg
- name: Add the NVIDIA repository
  shell: |
    echo "deb [signed-by=/usr/share/keyrings/nvidia-container-toolkit-keyring.gpg] https://nvidia.github.io/libnvidia-container/stable/deb/amd64 /" | tee /etc/apt/sources.list.d/nvidia_github_io_libnvidia_container_stable_ubuntu24_04.list
  args:
    creates: /etc/apt/sources.list.d/nvidia_github_io_libnvidia_container_stable_ubuntu24_04.list
- name: Update Repositories
  apt:
    update_cache: yes

- name: Post-driver installation packages installation
  become: true
  apt:
    autoremove: yes
    pkg:
    - nvidia-cuda-toolkit
    - nvidia-cudnn
    - nvidia-container-toolkit

## For more info: 
#
# * https://rancher.com/docs/k3s/latest/en/advanced/#enabling-legacy-iptables-on-raspbian-buster
# * https://github.com/k3s-io/k3s/issues/1019#issuecomment-593043089

### UNCOMMENT FOLLOWING LINES ON FIRST INSTALL ONLY.

# - name: Use legacy iptables (part 1)
#   become: true
#   command: iptables -F

# - name: Use legacy iptables ipv4 (part 2)
#   become: true
#   community.general.alternatives:
#     name: iptables
#     path: /usr/sbin/iptables-legacy

# - name: Use legacy iptables ipv6 (part 3)
#   become: true
#   community.general.alternatives:
#     name: ip6tables
#     path: /usr/sbin/ip6tables-legacy

# - name: Enable internal traffic
#   become: true
#   ansible.builtin.iptables:
#     chain: INPUT
#     source: "{{ k3s_pods_cidr }}"
#     in_interface: cilium_host
#     jump: ACCEPT

# # Reference: https://github.com/cilium/cilium/issues/18131#issuecomment-988160016
# - name: Override network filtering settings
#   become: true
#   copy:
#     dest: /etc/sysctl.d/90-override.conf
#     content: |
#       net.ipv4.conf.default.rp_filter = 0
#       net.ipv4.conf.*.rp_filter = 0

# - name: Disable ufw firewall
#   become: true
#   ansible.builtin.service:
#     name: ufw
#     state: stopped
#     enabled: false

# - name: Save iptables rules
#   become: true
#   command: iptables-save

# - name: Create rc.local file
#   command: touch /etc/rc.local
#   args:
#     creates: /etc/rc.local

# - name: Append content to /etc/rc.local
#   lineinfile:
#     path: /etc/rc.local
#     backrefs: yes
#     regexp: '^((?!.*\service procps reload\b).*)$'
#     line: '\1 service procps reload'